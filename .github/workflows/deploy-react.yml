name: Deploy React App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/pmta-monitoring-ui:latest

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Ensure Docker is running
            sudo systemctl start docker

            # Define the app directory on the server
            APP_DIR="/var/www/PMTA-MONITORING-UI"

            # Create the app directory if it doesn't exist
            mkdir -p $APP_DIR

            # Navigate to the app directory
            cd $APP_DIR

            # Stop and remove existing containers related to this app
            docker-compose down --rmi all --remove-orphans || true

      - name: Transfer Files to Server
        uses: appleboy/scp-action@master
        with:
          source: "."
          target: "/var/www/PMTA-MONITORING-UI"
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Using Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/PMTA-MONITORING-UI

            # Export the DOCKER_USERNAME environment variable
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}

            # Create the external network if it doesn't exist
            docker network ls | grep pmta-network || docker network create pmta-network

            # Pull the latest image
            docker-compose pull

            # Start the containers
            docker-compose up -d --force-recreate --remove-orphans
